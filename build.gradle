plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.automatic'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.security:spring-security-config:6.3.4'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:3.3.5'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Google Drive API
	implementation group: 'com.google.api-client', name: 'google-api-client', version: '1.32.1'
	implementation group: 'com.google.oauth-client', name: 'google-oauth-client', version: '1.36.0'
	implementation group: 'com.google.oauth-client', name: 'google-oauth-client-jetty', version: '1.36.0'
	implementation group: 'com.google.http-client', name: 'google-http-client-gson', version: '1.45.0'
	implementation 'com.google.apis:google-api-services-drive:v3-rev197-1.25.0'
	implementation 'com.google.auth:google-auth-library-oauth2-http:1.29.0'

	// OpenAI API와의 HTTP 요청 처리
	implementation 'org.springframework.boot:spring-boot-starter-webflux' // WebClient 사용

	// WordPress API와의 통신 (OpenFeign 사용)

	// 유틸리티 및 관리 라이브러리
	implementation 'org.projectlombok:lombok'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// MySQL 연동
	implementation 'mysql:mysql-connector-java:8.0.33'

	// Jacatra
	implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.1.0'

	// Security
	implementation group: 'io.github.cdimascio', name: 'java-dotenv', version: '5.2.2'

}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.withType(Test) {
	enabled = false
}

tasks.named('clean') {
	doFirst {
		def buildDir = file("${project.buildDir}")
		if (buildDir.exists()) {
			println "Deleting build directory: ${buildDir}"
			buildDir.deleteDir()
		}
	}
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

test {
	jvmArgs '-XX:+EnableDynamicAgentLoading'
}
